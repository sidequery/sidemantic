name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra dev --extra workbench

      - name: Check version consistency
        run: |
          PYPROJECT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          INIT_VERSION=$(grep '^__version__ = ' sidemantic/__init__.py | sed 's/__version__ = "\(.*\)"/\1/')
          if [ "$PYPROJECT_VERSION" != "$INIT_VERSION" ]; then
            echo "Version mismatch: pyproject.toml=$PYPROJECT_VERSION, __init__.py=$INIT_VERSION"
            exit 1
          fi
          echo "Version check passed: $PYPROJECT_VERSION"

      - name: Run ruff check
        run: uv run ruff check . --exclude docs/_extensions

      - name: Run ruff format check
        run: uv run ruff format --check . --exclude docs/_extensions

      - name: Run tests
        run: uv run pytest -v --cov=sidemantic --cov-report=term-missing
