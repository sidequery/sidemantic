# Sidemantic

> Define metrics once, query them anywhere with SQL or Python

Sidemantic is a semantic layer that works with your existing data warehouse. Define metrics, dimensions, and relationships in YAML (or import from Cube, dbt, Looker, etc.), then query them using SQL or Python.

Key features:
- **Governed calculations**: Define metrics once, query consistently everywhere
- **Accurate by design**: Prevents join fan-out, incorrect aggregations, and double-counting
- **Smart automation**: Automatic joins, dependency detection, multi-hop relationships
- **Rich metric types**: Aggregations, ratios, time comparisons, funnels, cumulative metrics
- **Format compatibility**: Import from Cube, MetricFlow (dbt), LookML (Looker), Hex, Rill, Superset, Omni

## Home

- [Home](https://docs.sidemantic.com/index.html): Define metrics once, query them anywhere with SQL or Python

## Getting Started

- [Getting Started](https://docs.sidemantic.com/getting-started.html): Try the interactive workbench with demo data (no installation required):

## Adapters

- [Adapters](https://docs.sidemantic.com/adapters.html): Sidemantic can import semantic models from other popular semantic layer formats, letting you use your existing metric definitions with Sidemantic's query engine and features.

## Core Concepts

- [Configuration](https://docs.sidemantic.com/config.html): Sidemantic configuration is specified in YAML files and can be overridden via CLI flags.
- [Connections](https://docs.sidemantic.com/connections.html): Sidemantic supports multiple database engines for executing semantic layer queries. Connection strings are specified in your YAML configuration files or via CLI flags.
- [Models](https://docs.sidemantic.com/models.html): Models define your data sources and their structure.
- [Metrics](https://docs.sidemantic.com/metrics.html): Metrics define how to aggregate and calculate measures. Sidemantic distinguishes between model-level metrics (aggregations) and graph-level metrics (formulas/references).
- [Relationships](https://docs.sidemantic.com/relationships.html): Define relationships between models for automatic joining.
- [Query](https://docs.sidemantic.com/query.html): Query the semantic layer using SQL syntax or the Python API.

## CLI

- [Overview](https://docs.sidemantic.com/cli.html): The Sidemantic CLI provides tools for working with semantic layers from the terminal.
- [Migrator](https://docs.sidemantic.com/migrator.html): Migrates existing SQL queries to semantic layer by analyzing queries and generating model definitions.
- [Workbench](https://docs.sidemantic.com/workbench.html): The Sidemantic Workbench is an interactive terminal UI for exploring semantic layers, writing SQL queries, and visualizing results.
- [MCP Server](https://docs.sidemantic.com/mcp-server.html): The Sidemantic MCP (Model Context Protocol) server enables AI assistants like Claude to query your semantic layer directly.

## Reference

- [Python API](https://docs.sidemantic.com/python-api.html): Complete Python API reference.
- [YAML Format](https://docs.sidemantic.com/YAML_FORMAT.html)
- [Gotchas](https://docs.sidemantic.com/GOTCHAS.html)

## Examples

- [Examples](https://docs.sidemantic.com/examples.html): Query with SQL:
