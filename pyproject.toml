[project]
name = "sidemantic"
version = "0.2.30"
description = "Universal semantic layer - import from Cube, dbt, LookML, Hex, and more"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.11"
dependencies = [
    "sqlglot>=25.0.0",
    "pyyaml>=6.0",
    "pydantic>=2.0.0",
    "jinja2>=3.1.0",
    "lkml>=1.3.7",
    "duckdb>=1.0.0",
    "inflect>=7.0.0,<7.2.0",  # PYODIDE: <7.2 required - inflect 7.2+ needs typing-extensions>=4.13 but Pyodide has 4.11.0
    "typer>=0.9.0",
    "textual[syntax]>=1.0.0",
    "plotext>=5.3.2",
    "textual-plotext>=1.0.1",
    "mcp[cli]>=1.16.0",
    "riffq>=0.1.0",
    "pyarrow>=14.0.0",
]

[project.scripts]
sidemantic = "sidemantic.cli:app"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.0",
    "pandas>=2.2,<3",
    "numpy>=1.26,<3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.claude",
  "/docs",
  "/tests",
  "/examples/__pycache__",
  "/examples/cube",
  "/examples/hex",
  "/examples/lookml",
  "/examples/metricflow",
  "/examples/omni",
  "/examples/rill",
  "/examples/sidemantic",
  "/examples/sql",
  "/examples/superset",
  "*.pkg",
  "test_*.py",
  "uv.lock",
]
# README.md is included via readme field in [project]
# examples/multi_format_demo is kept for demo mode

[tool.hatch.build.targets.wheel]
packages = ["sidemantic"]

[tool.hatch.build.targets.wheel.force-include]
"examples/multi_format_demo/cube" = "sidemantic/examples/multi_format_demo/cube"
"examples/multi_format_demo/hex" = "sidemantic/examples/multi_format_demo/hex"
"examples/multi_format_demo/lookml" = "sidemantic/examples/multi_format_demo/lookml"
"examples/multi_format_demo/demo_data.py" = "sidemantic/examples/multi_format_demo/demo_data.py"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "UP"]
ignore = ["E501", "N807"]  # N807: dunder methods like __init__ are supposed to have __

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]

[tool.uv]
prerelease = "if-necessary"

[dependency-groups]
dev = [
    "marimo==0.16.5",
    "pytest>=8.4.2",
]
